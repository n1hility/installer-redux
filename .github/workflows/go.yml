name: Go

on:
  release:
    types: [created, published, edited, prereleased, released]

jobs:
  build:
    runs-on: windows-latest
    env:
        FETCH_BASE_URL: ${{ github.server_url }}/${{ github.repository }}
    steps:
    - name: Test
    - uses: actions/checkout@v3
    - name: Check
       run: |
        .\check.ps1 ${{github.event.release.tag_name}}
        $code = $LASTEXITCODE
        if ($code -eq 2) {
          Write-Output "::set-output name=already-exists::true"
          Exit 0
        } 
        Write-Output "UPLOAD_ASSET_NAME=$env:UPLOAD_ASSET_NAME" | Out-File -FilePath $env:GITHUB_ENV -Append
        Exit $code
    - name: Set up Go
      uses: actions/setup-go@v3
      if: steps.Check.outputs.already-exists != 'true'
      with:
        go-version: 1.18
    - name: Setup Signature Tooling
      if: steps.Check.outputs.already-exists != 'true'
      run: |
          dotnet tool install --global AzureSignTool --version 3.0.0
          echo "CERT_NAME=${{secrets.CERT_NAME}}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "VAULT_ID=${{secrets.VAULT_ID}}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "APP_ID=${{secrets.APP_ID}}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "TENANT_ID=${{secrets.TENANT_ID}}" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "CLIENT_SECRET=${{secrets.CLIENT_SECRET}}" | Out-File -FilePath $env:GITHUB_ENV -Append
    - name: Build
      if: steps.Check.outputs.already-exists != 'true'
      run: |
        .\build.ps1 ${{github.event.release.tag_name}} prod
        $code = $LASTEXITCODE
        if ($code -eq 2) {
          Write-Output "::set-output name=artifact-missing::true"
          Exit 0
        }
        Exit $code
    - name: Upload
      if: steps.Check.outputs.already-exists != 'true' && steps.Build.outputs.artifact-missing != 'true'
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{github.event.release.tag_name}} $ENV:UPLOAD_ASSET_NAME

